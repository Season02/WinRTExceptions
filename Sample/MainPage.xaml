<Page
    x:Class="WinRTExceptions.Sample.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Column="1" Text="Exception Test Page" Style="{StaticResource PageHeaderTextStyle}" />
        <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Vertical">
            <TextBlock Style="{StaticResource SubheaderTextStyle}">Sample application demonstrating global exception handling.</TextBlock>
            
            <Button Margin="20 20 0 0" Click="StandardButtonClick" Content="Non async click handler" />
            <TextBlock Style="{StaticResource CaptionTextStyle}">Standard button handler, exception should be caught by Application.UnhandledException</TextBlock>

            <Button Margin="20 20 0 0" Click="AsyncButtonClick" Content="Async click handler" />
            <TextBlock Style="{StaticResource CaptionTextStyle}">Asynchronous button handler, exception will only be caught by custom synchronization context</TextBlock>
            
        </StackPanel>
    </Grid>
</Page>
